// Shape - superclass
function Shape() {
    this.x = 0;
    this.y = 0;
}

// superclass method
Shape.prototype.move = function (x, y) {
    this.x += x;
    this.y += y;
    console.info("Shape moved.");
};

// Rectangle - subclass
function Rectangle() {
    Shape.call(this); // call super constructor.
}

// subclass extends superclass
Rectangle.prototype = Object.create(Shape.prototype);
console.log(Rectangle.prototype.constructor.toString()); // constructor == Shape()
Rectangle.prototype.constructor = Rectangle;
console.log(Rectangle.prototype.constructor.toString()); // constructor == Rectangle()
var rect = new Rectangle();
console.log(rect.x + " " + rect.y);

if (rect instanceof Rectangle) console.log("rect is instanceof Rectangle"); // true.
if (rect instanceof Shape) console.log("rect is instanceof Shape"); // true.

rect.move(1, 1); // Outputs, "Shape moved."
console.log(rect.x + " " + rect.y);

